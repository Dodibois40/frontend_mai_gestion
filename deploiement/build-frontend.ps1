# Script de build du Frontend pour O2SWITCH
Write-Host "=== Build Frontend Mai Gestion ===" -ForegroundColor Cyan

$projectRoot = Split-Path -Parent $PSScriptRoot
$frontendDir = Join-Path $projectRoot "frontend"
$buildDir = Join-Path $PSScriptRoot "build\frontend"

# V√©rifier que le dossier frontend existe
if (-not (Test-Path $frontendDir)) {
    Write-Host "‚úó Dossier frontend introuvable : $frontendDir" -ForegroundColor Red
    exit 1
}

# Se d√©placer dans le dossier frontend
Set-Location $frontendDir
Write-Host "üìÅ Dossier de travail : $frontendDir" -ForegroundColor Gray

# 1. Installer les d√©pendances
Write-Host "`n1. Installation des d√©pendances..." -ForegroundColor Yellow
npm install
if ($LASTEXITCODE -ne 0) {
    Write-Host "‚úó Erreur lors de l'installation des d√©pendances" -ForegroundColor Red
    exit 1
}
Write-Host "‚úì D√©pendances install√©es" -ForegroundColor Green

# 2. Cr√©er le fichier .env.production si n√©cessaire
$envTemplate = Join-Path $PSScriptRoot "frontend-env-template.txt"
$envProd = Join-Path $frontendDir ".env.production"

if (Test-Path $envTemplate) {
    if (-not (Test-Path $envProd)) {
        Copy-Item -Path $envTemplate -Destination $envProd
        Write-Host "‚úì Template .env.production copi√© - √Ä CONFIGURER !" -ForegroundColor Yellow
        
        # Demander l'URL de l'API
        Write-Host "`nConfiguration de l'API Backend :" -ForegroundColor Cyan
        Write-Host "URL par d√©faut : https://api.lamanufacturedubois.com"
        $apiUrl = Read-Host "Appuyez sur Entr√©e pour garder la valeur par d√©faut ou entrez une nouvelle URL"
        
        if ([string]::IsNullOrWhiteSpace($apiUrl)) {
            $apiUrl = "https://api.lamanufacturedubois.com"
        }
        
        # Mettre √† jour le fichier
        (Get-Content $envProd) -replace 'VITE_API_URL=.*', "VITE_API_URL=$apiUrl" | Set-Content $envProd
        Write-Host "‚úì API URL configur√©e : $apiUrl" -ForegroundColor Green
    } else {
        Write-Host "‚úì Fichier .env.production existant conserv√©" -ForegroundColor Green
    }
}

# 3. Build de production
Write-Host "`n2. Build de production..." -ForegroundColor Yellow
npm run build
if ($LASTEXITCODE -ne 0) {
    Write-Host "‚úó Erreur lors du build" -ForegroundColor Red
    exit 1
}
Write-Host "‚úì Build termin√©" -ForegroundColor Green

# 4. Pr√©parer les fichiers pour le d√©ploiement
Write-Host "`n3. Pr√©paration des fichiers pour le d√©ploiement..." -ForegroundColor Yellow

# Nettoyer le dossier de build
if (Test-Path $buildDir) {
    Remove-Item -Path $buildDir\* -Recurse -Force
}

# Copier le build
$distDir = Join-Path $frontendDir "dist"
if (Test-Path $distDir) {
    Copy-Item -Path "$distDir\*" -Destination $buildDir -Recurse -Force
    Write-Host "‚úì Build copi√©" -ForegroundColor Green
} else {
    Write-Host "‚úó Dossier dist introuvable" -ForegroundColor Red
    exit 1
}

# 5. Copier le .htaccess
$htaccessTemplate = Join-Path $PSScriptRoot "htaccess-frontend.txt"
$htaccessDest = Join-Path $buildDir ".htaccess"

if (Test-Path $htaccessTemplate) {
    Copy-Item -Path $htaccessTemplate -Destination $htaccessDest
    Write-Host "‚úì Fichier .htaccess copi√©" -ForegroundColor Green
} else {
    Write-Host "‚ö†Ô∏è Template .htaccess non trouv√©" -ForegroundColor Yellow
}

# 6. Cr√©er un README pour le d√©ploiement
$readmeContent = @"
# Frontend Mai Gestion - Pr√™t pour le d√©ploiement

## Fichiers √† uploader sur O2SWITCH
Tous les fichiers de ce dossier doivent √™tre upload√©s dans :
/home/cexe9174/public_html/crm/

## Structure attendue sur le serveur
```
/home/cexe9174/public_html/crm/
‚îú‚îÄ‚îÄ .htaccess
‚îú‚îÄ‚îÄ index.html
‚îú‚îÄ‚îÄ assets/
‚îÇ   ‚îú‚îÄ‚îÄ *.js
‚îÇ   ‚îú‚îÄ‚îÄ *.css
‚îÇ   ‚îî‚îÄ‚îÄ images/
‚îú‚îÄ‚îÄ favicon.ico
‚îî‚îÄ‚îÄ [autres fichiers du build]
```

## Configuration dans cPanel
1. Cr√©er le sous-domaine : crm.lamanufacturedubois.com
2. Document root : /home/cexe9174/public_html/crm
3. Activer SSL Let's Encrypt

## V√©rification
1. Acc√©der √† https://crm.lamanufacturedubois.com
2. V√©rifier que l'application se charge
3. Tester la connexion
4. V√©rifier la console navigateur pour les erreurs

## D√©pannage
- Si page blanche : v√©rifier le .htaccess
- Si erreur API : v√©rifier VITE_API_URL dans le build
- Si erreur 404 : v√©rifier RewriteBase dans .htaccess
"@

$readmeContent | Out-File -FilePath (Join-Path $buildDir "README_DEPLOY.md") -Encoding UTF8

# 7. Analyser la taille du build
$buildSize = (Get-ChildItem $buildDir -Recurse | Measure-Object -Property Length -Sum).Sum / 1MB
Write-Host "`nüìä Statistiques du build :" -ForegroundColor Cyan
Write-Host "Taille totale : $([math]::Round($buildSize, 2)) MB" -ForegroundColor White

$jsFiles = Get-ChildItem $buildDir -Filter "*.js" -Recurse
$cssFiles = Get-ChildItem $buildDir -Filter "*.css" -Recurse
Write-Host "Fichiers JS : $($jsFiles.Count)" -ForegroundColor White
Write-Host "Fichiers CSS : $($cssFiles.Count)" -ForegroundColor White

# Retour au dossier initial
Set-Location $PSScriptRoot

Write-Host "`n‚úÖ Build Frontend termin√© !" -ForegroundColor Green
Write-Host "üìÅ Fichiers pr√™ts dans : $buildDir" -ForegroundColor Cyan
Write-Host "`n‚ö†Ô∏è IMPORTANT :" -ForegroundColor Yellow
Write-Host "1. V√©rifiez que l'URL de l'API est correcte" -ForegroundColor White
Write-Host "2. Testez localement avec 'npm run preview'" -ForegroundColor White
Write-Host "3. N'oubliez pas d'uploader le .htaccess" -ForegroundColor White 